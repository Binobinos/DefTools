import datetime
import json
import os
import random
import time
from datetime import datetime

import vk_api

# –ö–æ–Ω—Ñ–∏–≥
ACCESS_TOKEN = "vk1.a.7f5y8KLmlw2zgS2HN_W5cQxZ3lc0pNjWTYKUluWMOOov7CTIgsmmr30DdAwNHJ7d-4grIWD9g85NN7hQJN3FN3jmum7SWISMbxjJQ7vK9ZxOvKuZMdILEdVJfn66Exxupv3TWB0CbQ1Mm_N3X1LVlJsOpmtAs754ZbfKW9e9ne2uy_7VgMCSB5hg_z9Wr_-RWujTzJ-GOTpIx4fLLBnb0A"
GROUP_ID = "-152447212"
PROGRESS_FILE = "vk_progress.json"
TOTAL_POSTS_ESTIMATE = 130  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
COMMENT_MESSAGES = [
    "–û—Ç–ª–∏—á–Ω—ã–π –ø–æ—Å—Ç! üëç", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üòä", "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! üôè",
    "–ö–ª–∞—Å—Å–Ω–æ! üî•", "–õ–∞–π–∫! ‚ù§Ô∏è", "–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ! üìö", "–°—É–ø–µ—Ä! üëè",
    "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! üåü", "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! üíØ", "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è! üòç",
    "–¢–∞–∫-—Ç–æ! üòè", "–ù–æ—Ä–º! üòé", "–ü—É—à–∫–∞! üöÄ", "–ê–≥–æ–Ω—å! üî•", "–¢–æ–ø—á–∏–∫! üèÜ",
    "–ì–æ—É! üèÉ‚Äç‚ôÇÔ∏è", "–•–∞–π–ø! üé§", "–ë–æ–º–±–µ–∑–Ω–æ! üí£", "–†–æ—Ñ–ª! ü§£",
    "–ü–æ—á–µ–º—É —Ç–∞–∫? ü§î", "–ê –ø–æ–¥—Ä–æ–±–Ω–µ–µ? üßê", "–≠—Ç–æ –∫–∞–∫? ‚ùì", "–°–µ—Ä—å—ë–∑–Ω–æ? üò≥",
    "–ò —á—Ç–æ —Ç–µ–ø–µ—Ä—å? üéØ", "–ö—Ç–æ —Å–æ–≥–ª–∞—Å–µ–Ω? üôã‚Äç‚ôÇÔ∏è", "–ì–¥–µ –ª–æ–≥–∏–∫–∞? üß†",
    "–í–∞—É! üòÆ", "–û–≥–æ! üò≤", "–£—Ö —Ç—ã! ‚ú®", "–ë–ª–∏–Ω... üòÖ", "–ù—É –∏ –Ω—É! üòº",
    "–ö–∞–∫ –∂–µ –∫—Ä—É—Ç–æ! üéâ", "–û–±–∞–ª–¥–µ—Ç—å! ü§Ø", "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! üåÄ", "–®–æ–∫! üí•" "–≠—Ç–æ –ø—Ä–æ–≤–∞–ª... üï≥Ô∏è", "–ñ–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è! üì∫",
    "–ì–¥–µ –º–æ–∏ –ø–æ–ø–∫–æ—Ä–Ω—ã? üçø", "–í–æ—Ç —ç—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç! üé≠", "–°–ø–∞—Å–∏—Ç–µ! üÜò",
    "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üí™", "–¢—ã —Å–º–æ–∂–µ—à—å! ü¶æ", "–í–ø–µ—Ä—ë–¥! ‚è©", "–ù–µ —Å–¥–∞–≤–∞–π—Å—è! üèÅ",
    "–ì–æ—Ä–∂—É—Å—å! ü•á", "–ú–æ–ª–æ–¥–µ—Ü! üë∂", "–¢—ã –ª—É—á—à–∏–π! üèÖ",
    "–ó–≤—É—á–∏—Ç –∫–∞–∫ –ø–ª–∞–Ω! üìù", "–Ø –ø–∞–¥–∞—é... ü™Ç", "–≠—Ç–æ —à–µ–¥–µ–≤—Ä! üé®",
    "–ì–µ–Ω–∏–∞–ª—å–Ω–æ! üß©", "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞! ü¶Ñ", "–ú–∞–≥–∏—è! üé©", "–ö–æ—Å–º–æ—Å! ü™ê",
    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç—Ä—É–¥! üë®‚Äçüè´", "–í—ã –ª—É—á—à–∏–π –ø–µ–¥–∞–≥–æ–≥! üìñ", "–ü—Ä–∏–º–∏—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å! üôá",
    "–ù–∞–º —Ç–∞–∫ –ø–æ–≤–µ–∑–ª–æ —Å –≤–∞–º–∏! üíù", "–í–∞—à–∏ –ø–æ—Å—Ç—ã ‚Äî –æ–≥–æ–Ω—å! üî•", "–û–±–æ–∂–∞—é –≤–∞—à–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã! üíå"]

# –î–æ–ø–æ–ª–Ω—è–µ–º —Å–º–∞–π–ª–∞–º–∏
COMMENT_MESSAGES += [
                        f"–û—Ü–µ–Ω–∏—Ç–µ –º–æ–π —Å–º–∞–π–ª: {random.choice(['üí©', 'üëΩ', 'üçï'])}"] * 10


def load_progress():
    if os.path.exists(PROGRESS_FILE):
        with open(PROGRESS_FILE, "r") as f:
            return json.load(f)
    return {"last_post": 0, "processed": 0, "start_time": time.time()}


def save_progress(data):
    with open(PROGRESS_FILE, "w") as f:
        json.dump(data, f)


def get_all_posts(vk, maxs):
    all_posts = []
    offset = 0
    count = 13

    print("\n‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤...")

    while True:
        try:
            chunk = vk.wall.get(owner_id=GROUP_ID, count=count, offset=offset)["items"]
            if not chunk:
                pass
                break
            if offset > maxs - 1:
                break
            all_posts.extend(chunk)
            offset += count

            print(
                f"üîÑ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {len(all_posts)}/{TOTAL_POSTS_ESTIMATE} "
                f"({len(all_posts) / TOTAL_POSTS_ESTIMATE:.1%}) | "
                f"–í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
            )

            # time.sleep(0.5)

        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞: {e}")
            break

    print(f"\nüî• –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(all_posts)} –ø–æ—Å—Ç–æ–≤")
    with open("data.json", "w") as f:
        json.dump(all_posts, f, indent=4)
    return all_posts


def process_post(vk, post, current, total, progress):
    post_id = post["id"]
    print("\n" + "=" * 50)
    print(f"üìù –ü–æ—Å—Ç {current}/{total} (ID: {post_id})")

    # –°—Ç–∞–≤–∏–º –ª–∞–π–∫ (–±–µ–∑ –∫–∞–ø—á–∏)
    """    try:
        vk.likes.add(type="post", owner_id=GROUP_ID, item_id=post_id)
        print("üíñ –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–∞–π–∫–∞: {e}")"""

    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (—Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–ø—á–∏)
    comment_attempts = 0
    while comment_attempts < 10:  # 10 –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        try:
            comment = random.choice(COMMENT_MESSAGES)
            vk.wall.createComment(owner_id=GROUP_ID, post_id=post_id, message=comment)
            print(f"üí¨ –ö–æ–º–º–µ–Ω—Ç: ¬´{comment}¬ª")
            comment_attempts += 1
        except Captcha as e:
            print(f"‚ö† –ö–∞–ø—á–∞! –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É {post_id} {e}")
            time.sleep(7)
        except ApiError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞: {e}")
            time.sleep(5)

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    progress['last_post'] = current
    delay = random.uniform(60, 65)
    print(f"‚è≥ –ñ–¥–µ–º {delay:.1f} —Å–µ–∫...")
    save_progress(progress)
    time.sleep(delay)


def main(maxs):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if "–≤–∞—à_—Ç–æ–∫–µ–Ω" in ACCESS_TOKEN:
        print("‚ùå –í—Å—Ç–∞–≤—å—Ç–µ —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω!")
        return

    vk = vk_api.VkApi(token=ACCESS_TOKEN).get_api()
    progress = load_progress()

    try:
        print("\n" + "=" * 50)
        print(f"üöÄ –°—Ç–∞—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥—Ä—É–ø–ø—ã {GROUP_ID}")
        print(f"‚è± –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m %H:%M:%S')}")
        print("=" * 50)
        try:
            posts = get_all_posts(vk, maxs)
        except KeyboardInterrupt:
            print("–ö–æ–Ω–µ—Ü –†–∞–±–æ—Ç—ã")
            return
        if not posts:
            print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
            return

        total = len(posts)
        start_from = progress['last_post']

        print(f"\nüîç –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–æ–∑–∏—Ü–∏–∏ {start_from + 1}/{total}")
        for i in range(start_from, total):
            print("‚ùó –ü–æ—Å—Ç")
            print(posts[i]["text"])
            if "activity" in posts[i]:
                print("üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É:")
                for comment in posts[i]["activity"]["comments"]:
                    print(comment["text"])
            try:
                process_post(vk, posts[i], i + 1, total, progress)
            except KeyboardInterrupt:
                print("–ö–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã")
                break
            except Exception as e:
                print(e)

        print("\nüéâ –í—Å–µ –ø–æ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
    except Exception as e:
        print(f"\nüî• –û—à–∏–±–∫–∞: {e}")
    finally:
        print("\n–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    main(129)
